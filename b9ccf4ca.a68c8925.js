(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{112:function(e,t,r){"use strict";r.d(t,"a",(function(){return b})),r.d(t,"b",(function(){return m}));var o=r(0),n=r.n(o);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=n.a.createContext({}),s=function(e){var t=n.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},b=function(e){var t=s(e.components);return n.a.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},d=n.a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),b=s(r),d=o,m=b["".concat(c,".").concat(d)]||b[d]||l[d]||a;return r?n.a.createElement(m,i(i({ref:t},p),{},{components:r})):n.a.createElement(m,i({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var p=2;p<a;p++)c[p]=r[p];return n.a.createElement.apply(null,c)}return n.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},99:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return a})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return i})),r.d(t,"default",(function(){return p}));var o=r(3),n=(r(0),r(112));const a={id:"useCheckboxGroup",title:"useCheckboxGroup"},c={unversionedId:"useCheckboxGroup",id:"useCheckboxGroup",isDocsHomePage:!1,title:"useCheckboxGroup",description:"Provides the behavior and accessibility implementation for a checkbox group component. Checkbox groups allow users to select multiple items from a list of options.",source:"@site/docs/useCheckboxGroup.md",slug:"/useCheckboxGroup",permalink:"/react-native-aria/docs/useCheckboxGroup",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/useCheckboxGroup.md",version:"current",sidebar:"someSidebar",previous:{title:"useCheckbox",permalink:"/react-native-aria/docs/useCheckbox"},next:{title:"useRadioGroup",permalink:"/react-native-aria/docs/useRadioGroup"}},i=[{value:"Install",id:"install",children:[]},{value:"Import",id:"import",children:[]},{value:"API",id:"api",children:[]},{value:"Usage",id:"usage",children:[]}],u={toc:i};function p({components:e,...t}){return Object(n.b)("wrapper",Object(o.a)({},u,t,{components:e,mdxType:"MDXLayout"}),Object(n.b)("p",null,"Provides the behavior and accessibility implementation for a checkbox group component. Checkbox groups allow users to select multiple items from a list of options."),Object(n.b)("h3",{id:"install"},"Install"),Object(n.b)("pre",null,Object(n.b)("code",Object(o.a)({parentName:"pre"},{}),"yarn add @react-native-aria/checkbox\n")),Object(n.b)("h3",{id:"import"},"Import"),Object(n.b)("pre",null,Object(n.b)("code",Object(o.a)({parentName:"pre"},{}),"import {useCheckboxGroup, useCheckboxGroupItem} from '@react-native-aria/checkbox'\n")),Object(n.b)("h3",{id:"api"},"API"),Object(n.b)("pre",null,Object(n.b)("code",Object(o.a)({parentName:"pre"},{}),"useCheckboxGroup(props: AriaCheckboxGroupProps, state: CheckboxGroupState): CheckboxGroupAria\nuseCheckboxGroupItem(\n  props: AriaCheckboxGroupItemProps,\n  state: CheckboxGroupState,\n  inputRef: RefObject<HTMLInputElement>\n): CheckboxAria\n")),Object(n.b)("h3",{id:"usage"},"Usage"),Object(n.b)("iframe",{src:"https://snack.expo.io/embedded/@nishanbende/checkbox?preview=true&platform=web&theme=dark",height:"600",width:"100%"}))}p.isMDXComponent=!0}}]);